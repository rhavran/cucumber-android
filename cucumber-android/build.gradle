import java.time.Duration

apply plugin: 'com.android.library'
apply plugin: 'de.marcphilipp.nexus-publish'
apply plugin: 'signing'
apply plugin: 'digital.wup.android-maven-publish'
apply plugin: 'kotlin-android'

addAndroidConfig()

configurations.all {
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}


dependencies {
    api "io.cucumber:cucumber-java:$cucumber_javaVersion"
    api "io.cucumber:cucumber-junit:$cucumber_javaVersion"
    api 'junit:junit:4.13'
    api "androidx.test:runner:1.3.0"
    testImplementation "androidx.test:core:1.3.0"
    testImplementation "org.robolectric:robolectric:4.3.1"
    testImplementation "org.powermock:powermock-api-mockito2:2.0.2"
    testImplementation "org.powermock:powermock-module-junit4:2.0.2"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

task("generateJavadoc", type: Javadoc, group: 'documentation') {
    source = android.sourceSets.main.java.srcDirs
    destinationDir = new File("${project.buildDir}/javadoc")
    options.addStringOption('Xdoclint:none', '-quiet')
}

task javadocJar(type: Jar, dependsOn: generateJavadoc) {
    archiveClassifier.set 'javadoc'
    from generateJavadoc.destinationDir
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set 'sources'
}


archivesBaseName = "cucumber-android"

nexusPublishing {
    packageGroup = project.group
    repositories {
        sonatype {
            if (project.hasProperty('ossrhUsername')) {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
    connectTimeout = Duration.ofMinutes(5)
    clientTimeout = Duration.ofMinutes(5)
}

publishing {
    publications {
        maven(MavenPublication) {
            //we need to defer it until variants are available
            android.libraryVariants.all { v ->
                if (v.name=='release') {
                    from components.android
                    setArtifacts([])
                    artifact tasks."bundleReleaseAar"
                    artifact sourcesJar
                    artifact javadocJar

                    pom {
                        name = 'Cucumber-JVM: Android'
                        packaging = 'aar'
                        // optionally artifactId can be defined here
                        description = 'Android support for Cucumber-JVM'
                        url = 'https://github.com/cucumber/cucumber-android'

                        scm {
                            connection = 'scm:git:https://github.com/cucumber/cucumber-android.git'
                            developerConnection = 'scm:git:git@github.com:cucumber/cucumber-android.git'
                            url = 'https://github.com/cucumber/cucumber-android'
                        }

                        licenses {
                            license {
                                name = 'MIT License'
                                url = 'http://www.opensource.org/licenses/mit-license'
                            }
                        }

                        developers {
                            developer {
                                id = 'lsuski'
                                name = '≈Åukasz Suski'
                                email = 'lukasz.suski@finanteq.com'
                            }
                        }
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.maven
}

